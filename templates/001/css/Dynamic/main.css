/* General */

body {
    font-family: <%= fontFamily %>;
    font-size: <%= fontSize %>em;
    color: <%= bodyText %>;
    background: <%= bodyBackground %>;
}

h1,h2,h3,h4,h5,h6 {
    font-family: <%= headingsFontFamily %>;
}

h2 {
    color: <%= h2Colour %>;
}

h1,h3,h4,h5,h6 {
    color: <%= hColour %>;
}

#headerContainer {
    background-color: <%= headerBackgroundColour %>;
    background-image: url(<%= headerImage %>);
}

#headerContainer h1 {
    background-image: url(<%= formTitleImage %>);
}

/* Section */

<%
    var lightSec    = colour.get('sectionBarBackground').get('light');
    var darkSec     = colour.get('sectionBarBackground').get('default');    
%>

.section h3 {
    border: 1px solid <%= colour.get('sectionBarBackground').get('default') %>;
    background-color: <%= lightSec %>;
    background-image: -ms-linear-gradient(top, <%= lightSec %> 0%, <%= darkSec %> 100%);
    background-image: -moz-linear-gradient(top, <%= lightSec %> 0%, <%= darkSec %> 100%);
    background-image: -o-linear-gradient(top, <%= lightSec %> 0%, <%= darkSec %> 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, <%= lightSec %>), color-stop(1, <%= darkSec %>));
    background-image: -webkit-linear-gradient(top, <%= lightSec %> 0%, <%= darkSec %> 100%);
    background-image: linear-gradient(to bottom, <%= lightSec %> 0%, <%= darkSec %> 100%);
}

/* Rounded */

.rounded,
.container,
.section h3,
.contentElement .input .errors,
.contentElement .singleLineInputBox .input input,
.contentElement .multipleChoice .input .options,
.next button,
.previous button,
.save button,
.address .confirm,
.address .confirm .clarify .addressOptions {    
    -webkit-border-radius: <%= radius %>;
    -moz-border-radius: <%= radius %>;
    border-radius: <%= radius %>;
}

/* Sprites */

.sprite,
.section h3:before,
.required label.question span.text:before,
.singleLineInputBox .input span.element:before,
.singleLineInputBox .input span.element:after,
.multipleChoice .input label.option input+span.text:before,
.checkbox .input label.option input+span.text:before,
.valid .multipleChoice .input:after,
.invalid .multipleChoice .input:after,
.save:after,
.next:after,
.previous:before,
.selectboxitArrow {
    background-image: url(<%= sprite %>);
}

/* colours */

.contentElement .input .errors {
    border: <%= globalColours.get(4).get('default') %> 1px solid;
    color: <%= globalColours.get(4).get('default') %>;
    background-color: <%= globalColours.get(4).get('alternative') %>;
}

.contentElement .input .errors:before {
    border-color: transparent <%= globalColours.get(4).get('default') %>;
}

.contentElement .input .errors:after {
    border-color: transparent <%= globalColours.get(4).get('alternative') %>;
}

.contentElement .singleLineInputBox .input input {
    border:<%= colour.get(1).get('default') %> 1px solid;
    color:<%= globalColours.get(1).get('default') %> ;
}

.valid .singleLineInputBox .input input {
    border:<%= globalColours.get(3).get('default') %> 1px solid;
    color:<%= globalColours.get(3).get('default') %>;
}

.invalid .singleLineInputBox .input input {
    border:<%= globalColours.get(4).get('default') %> 1px solid;
    color:<%= globalColours.get(4).get('default') %>;
}

.input label.option {
    color: <%= globalColours.get(1).get('default') %>;
}

.invalid .multipleChoice .input .options {
    border-color:<%= globalColours.get(4).get('default') %>;
    background-color:<%= globalColours.get(4).get('alternative') %>;
}

.invalid .multipleChoice .input .options span.text {
    color:<%= globalColours.get(4).get('default') %>;
}

.valid .selectboxit {
    border:<%= globalColours.get(3).get('default') %> 1px solid;
    color:<%= globalColours.get(3).get('default') %>;
}

.invalid .selectboxit {
    border:<%= globalColours.get(4).get('default') %> 1px solid;
    color:<%= globalColours.get(4).get('default') %>;
}

.identityVerification .persona {
    background-color: <%= colour.get(1).get('lightest') %>;
    color: <%= colour.get(1).get('default') %>;
}

.identityVerification .persona iframe {
    border: <%= colour.get(1).get('default') %> 1px solid;
}

.next button,
.previous button {
    color: <%= globalColours.get(2).get('default') %>;
    background-color: <%= colour.get(1).get('light') %>;
    background-image: -ms-linear-gradient(top, <%= colour.get(1).get('light') %> 0%, <%= colour.get(1).get('default') %> 100%);
    background-image: -moz-linear-gradient(top, <%= colour.get(1).get('light') %> 0%, <%= colour.get(1).get('default') %> 100%);
    background-image: -o-linear-gradient(top, <%= colour.get(1).get('light') %> 0%, <%= colour.get(1).get('default') %> 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, <%= colour.get(1).get('light') %>), color-stop(1, <%= colour.get(0).get('default') %>));
    background-image: -webkit-linear-gradient(top, <%= colour.get(1).get('light') %> 0%, <%= colour.get(1).get('default') %> 100%);
    background-image: linear-gradient(to bottom, <%= colour.get(1).get('light') %> 0%, <%= colour.get(1).get('default') %> 100%);
}


.save button {
    color: <%= globalColours.get(1).get('default') %>;
    background-color: <%= globalColours.get(2).get('default') %>;
    background-image: -moz-linear-gradient(top, <%= globalColours.get(2).get('default') %>, #e6e6e6);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(<%= globalColours.get(2).get('default') %>), to(#e6e6e6));
    background-image: -webkit-linear-gradient(top, <%= globalColours.get(2).get('default') %>, #e6e6e6);
    background-image: -o-linear-gradient(top, <%= globalColours.get(2).get('default') %>, #e6e6e6);
    background-image: linear-gradient(to bottom, <%= globalColours.get(2).get('default') %>, #e6e6e6);
    border: 1px solid <%= globalColours.get(1).get('default') %>;
    border-color: #e6e6e6 #e6e6e6 #bfbfbf;
    border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
    border-bottom-color: #b3b3b3;
    -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
    -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
    box-shadow: 1px 1px 3px 0 <%= globalColours.get(1).get('alternative') %>;
}

.address .confirm:before {
    border-color: <%= globalColours.get(1).get('default') %> transparent;
}

.address .confirm {
    border: 1px solid #CCCCCC;
    background-color: <%= globalColours.get(1).get('alternative') %>;
}

.address .confirm h4:before {
    border-color: <%= globalColours.get(2).get('default') %> transparent;
}

.address .confirm .clarify .addressOptions {
    border: <%= colour.get(1).get('light') %> 1px solid;
}

.address .confirm .clarify .addressOptions li:hover {
    background-color:#0088cc;
    color:white;
}

#ui-datepicker-div.ui-widget-content {
  border: 1px solid <%= colour.get(0).get('default') %>;
}

#ui-datepicker-div .ui-widget-header {
  background:<%= colour.get(1).get('default') %>;
}

#ui-datepicker-div thead tr {
  background-color:<%= colour.get(1).get('light') %>;
  color: <%= globalColours.get(2).get('default') %>;
}

#ui-datepicker-div .ui-state-active, #ui-datepicker-div .ui-widget-content .ui-state-active, #ui-datepicker-div .ui-widget-header .ui-state-active {
  background-color:<%= colour.get(0).get('default') %>;
  color: <%= globalColours.get(2).get('default') %>;
}

/* Gradients */

<%
    var dark1   = (colour.get('override')) ? colour.get('override') : colour.get(0).get('dark');
    var light1  = colour.get(0).get('light');

    var dark2   = colour.get(1).get('dark');
    var light2  = colour.get(1).get('light');
%>

.gradientDarkToLight1,
.contentElement .multipleChoice .input label.option input:checked+img {
    background-color: <%= dark1 %>;
    background-image: -ms-linear-gradient(top, <%= dark1 %> 0%, <%= light1 %> 100%);
    background-image: -moz-linear-gradient(top, <%= dark1 %> 0%, <%= light1 %> 100%);
    background-image: -o-linear-gradient(top, <%= dark1 %> 0%, <%= light1 %> 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, <%= dark1 %>), color-stop(1, <%= light1 %>));
    background-image: -webkit-linear-gradient(top, <%= dark1 %> 0%, <%= light1 %> 100%);
    background-image: linear-gradient(to bottom, <%= dark1 %> 0%, <%= light1 %> 100%);
}

.gradientLightToDark1 {
    background-color: <%= light1 %>;
    background-image: -ms-linear-gradient(top, <%= light1 %> 0%, <%= dark1 %> 100%);
    background-image: -moz-linear-gradient(top, <%= light1 %> 0%, <%= dark1 %> 100%);
    background-image: -o-linear-gradient(top, <%= light1 %> 0%, <%= dark1 %> 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, <%= light1 %>), color-stop(1, <%= dark1 %>));
    background-image: -webkit-linear-gradient(top, <%= light1 %> 0%, <%= dark1 %> 100%);
    background-image: linear-gradient(to bottom, <%= light1 %> 0%, <%= dark1 %> 100%);    
}

.gradientDarkToLight2 {
    background-color: <%= dark2 %>;
    background-image: -ms-linear-gradient(top, <%= dark2 %> 0%, <%= light2 %> 100%);
    background-image: -moz-linear-gradient(top, <%= dark2 %> 0%, <%= light2 %> 100%);
    background-image: -o-linear-gradient(top, <%= dark2 %> 0%, <%= light2 %> 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, <%= dark2 %>), color-stop(1, <%= light2 %>));
    background-image: -webkit-linear-gradient(top, <%= dark2 %> 0%, <%= light2 %> 100%);
    background-image: linear-gradient(to bottom, <%= dark2 %> 0%, <%= light2 %> 100%);    
}

.gradientLightToDark2,
.contentElement .multipleChoice .input label.option input+img {
    background-color: <%= light2 %>;
    background-image: -ms-linear-gradient(top, <%= light2 %> 0%, <%= dark2 %> 100%);
    background-image: -moz-linear-gradient(top, <%= light2 %> 0%, <%= dark2 %> 100%);
    background-image: -o-linear-gradient(top, <%= light2 %> 0%, <%= dark2 %> 100%);
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, <%= light2 %>), color-stop(1, <%= dark2 %>));
    background-image: -webkit-linear-gradient(top, <%= light2 %> 0%, <%= dark2 %> 100%);
    background-image: linear-gradient(to bottom, <%= light2 %> 0%, <%= dark2 %> 100%);    
}

/* Multiple Choice */

<%
    var labelActive = (colour.get('override')) ? colour.get('override') : colour.get(0).get('default');
%>

.contentElement .multipleChoice .input label.option input:checked~span.text {
    color: <%= labelActive %>;
}

.selectboxit {
    background-color:transparent;
    background-image: none;
    border: 1px solid <%= colour.get(1).get('default') %>;
    box-shadow: none;
}

@media (max-width: 719px) {
    label.option input[type="checkbox"]+img+span.text:before {
        background-image: url(<%= sprite %>);
    }
}